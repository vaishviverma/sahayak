# -*- coding: utf-8 -*-
"""grocery.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IljAZCGIpJX86Q_CPRfYDcc4N6RFdP3c
"""

import streamlit as st
from datacleaning import df
import google.generativeai as genai
from predictions import forecast_sales


key = open("api_key.txt", "r").read().strip()
genai.configure(api_key=key)

def chat_with_ai(query):
    model = genai.GenerativeModel("gemini-1.5-flash")
    
    try:
        response = model.generate_content(query)
        return response.text if response else "No response from AI."
    except Exception as e:
        return f"Error: {str(e)}"

def get_sales_forecast():
    forecast_text = "\n".join([f"{entry['ds'].strftime('%Y-%m-%d')}: ${round(entry['yhat'], 2)}" for entry in forecast_sales])
    prompt = f"""
    Here is the upcoming sales forecast for the next 7 days:

    {forecast_text}

    Please analyze this data and provide insights in a simple, easy-to-understand format for a supermarket owner.
    Highlight trends, peak sales days, and any important observations. Keep the response to 30 words maximum.
    """

    insights = chat_with_ai(prompt)
    st.write(insights)  # Fix: Directly write insights to Streamlit

st.title("ðŸ›’ Supermarket AI Assistant")
st.subheader("Ask me about your sales trends!")

query = st.text_input("ðŸ’¬ Ask your question:")

# Fix: Initialize response to prevent undefined variable errors
response = "Ask about sales forecast to get insights!"

if st.button("Get Answer"):
    if "sales forecast" in query.lower():
        response = get_sales_forecast()

    st.write(response)  # Fix: Ensure response is always printed
